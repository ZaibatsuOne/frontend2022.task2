/*! tailwindcss v2.2.19 | MIT License | https://tailwindcss.com */
/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */
/*
Document
========
*/
/**
Use a better box model (opinionated).
*/
*,
::before,
::after {
  box-sizing: border-box;
}

/**
Use a more readable tab size (opinionated).
*/
html {
  -moz-tab-size: 4;
  -o-tab-size: 4;
  tab-size: 4;
}

/**
1. Correct the line height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
*/
html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/*
Sections
========
*/
/**
Remove the margin in all browsers.
*/
body {
  margin: 0;
}

/**
Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
*/
body {
  font-family: system-ui, -apple-system, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji";
}

/*
Grouping content
================
*/
/**
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
*/
hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
}

/*
Text-level semantics
====================
*/
/**
Add the correct text decoration in Chrome, Edge, and Safari.
*/
abbr[title] {
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
}

/**
Add the correct font weight in Edge and Safari.
*/
b,
strong {
  font-weight: bolder;
}

/**
1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
2. Correct the odd 'em' font sizing in all browsers.
*/
code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
Add the correct font size in all browsers.
*/
small {
  font-size: 80%;
}

/**
Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
*/
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
Tabular data
============
*/
/**
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
*/
table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
}

/*
Forms
=====
*/
/**
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
*/
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
Remove the inheritance of text transform in Edge and Firefox.
1. Remove the inheritance of text transform in Firefox.
*/
button,
select { /* 1 */
  text-transform: none;
}

/**
Correct the inability to style clickable types in iOS and Safari.
*/
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
Remove the inner border and padding in Firefox.
*/
::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
Restore the focus styles unset by the previous rule.
*/
:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
Remove the additional ':invalid' styles in Firefox.
See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
*/
:-moz-ui-invalid {
  box-shadow: none;
}

/**
Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
*/
legend {
  padding: 0;
}

/**
Add the correct vertical alignment in Chrome and Firefox.
*/
progress {
  vertical-align: baseline;
}

/**
Correct the cursor style of increment and decrement buttons in Safari.
*/
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/**
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/
[type=search] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
Remove the inner padding in Chrome and Safari on macOS.
*/
::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to 'inherit' in Safari.
*/
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/*
Interactive
===========
*/
/*
Add the correct display in Chrome and Safari.
*/
summary {
  display: list-item;
}

/**
 * Manually forked from SUIT CSS Base: https://github.com/suitcss/base
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */
/**
 * Removes the default spacing and border for appropriate elements.
 */
blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

button {
  background-color: transparent;
  background-image: none;
}

fieldset {
  margin: 0;
  padding: 0;
}

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

/**
 * Tailwind custom reset styles
 */
/**
 * 1. Use the user's configured `sans` font-family (with Tailwind's default
 *    sans-serif font stack as a fallback) as a sane default.
 * 2. Use Tailwind's default "normal" line-height so the user isn't forced
 *    to override it to ensure consistency even when using the default theme.
 */
html {
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 1 */
  line-height: 1.5; /* 2 */
}

/**
 * Inherit font-family and line-height from `html` so users can set them as
 * a class directly on the `html` element.
 */
body {
  font-family: inherit;
  line-height: inherit;
}

/*
 * Ensure horizontal rules are visible by default
 */
hr {
  border-top-width: 1px;
}

textarea {
  resize: vertical;
}

input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {
  opacity: 1;
  color: #9ca3af;
}

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  color: #9ca3af;
}

input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  opacity: 1;
  color: #9ca3af;
}

input::-ms-input-placeholder, textarea::-ms-input-placeholder {
  opacity: 1;
  color: #9ca3af;
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  color: #9ca3af;
}

button,
[role=button] {
  cursor: pointer;
}

/**
 * Override legacy focus reset from Normalize with modern Firefox focus styles.
 *
 * This is actually an improvement over the new defaults in Firefox in our testing,
 * as it triggers the better focus styles even for links, which still use a dotted
 * outline in Firefox by default.
 */
:-moz-focusring {
  outline: auto;
}

table {
  border-collapse: collapse;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/**
 * Reset links to optimize for opt-in styling instead of
 * opt-out.
 */
a {
  color: inherit;
  text-decoration: inherit;
}

/**
 * Reset form element properties that are easy to forget to
 * style explicitly so you don't inadvertently introduce
 * styles that deviate from your design system. These styles
 * supplement a partial reset that is already applied by
 * normalize.css.
 */
button,
input,
optgroup,
select,
textarea {
  padding: 0;
  line-height: inherit;
  color: inherit;
}

/**
 * Use the configured 'mono' font family for elements that
 * are expected to be rendered with a monospace font, falling
 * back to the system monospace stack if there is no configured
 * 'mono' font family.
 */
pre,
code,
kbd,
samp {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

/**
 * 1. Make replaced elements `display: block` by default as that's
 *    the behavior you want almost all of the time. Inspired by
 *    CSS Remedy, with `svg` added as well.
 *
 *    https://github.com/mozdevs/cssremedy/issues/14
 *
 * 2. Add `vertical-align: middle` to align replaced elements more
 *    sensibly by default when overriding `display` by adding a
 *    utility like `inline`.
 *
 *    This can trigger a poorly considered linting error in some
 *    tools but is included by design.
 *
 *    https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210
 */
img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/**
 * Constrain images and videos to the parent width and preserve
 * their intrinsic aspect ratio.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */
img,
video {
  max-width: 100%;
  height: auto;
}

/**
 * Ensure the default browser behavior of the `hidden` attribute.
 */
[hidden] {
  display: none;
}

.container {
  max-width: 1292px;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  margin-right: auto;
  margin-left: auto;
}
@media (max-width: 1259px) {
  .container {
    max-width: 1024px;
  }
}
@media (max-width: 1023px) {
  .container {
    max-width: 768px;
  }
}
@media (max-width: 767px) {
  .container {
    max-width: 576px;
    padding-left: 8px;
    padding-right: 8px;
  }
}

body {
  font-family: "Roboto", sans-serif;
  background: #F5F5F5;
  font-size: 14px;
}

.header {
  padding: 0px;
  height: 80px;
  background: #1F2937;
}

.header__nav {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}

.header__menu {
  display: flex;
  align-items: center;
}

.header__image {
  width: 252px;
  height: 60px;
  margin-right: 30px;
}
@media (max-width: 767px) {
  .header__image {
    display: none;
  }
}

.header__list {
  gap: 16px;
  display: flex;
  flex-direction: row;
  align-items: center;
  padding: 0px;
}
@media (max-width: 767px) {
  .header__list {
    display: none;
    gap: 0px;
  }
}

.header__item {
  padding: 12px;
  color: #D1D5DB;
  align-items: center;
  justify-content: center;
  display: flex;
  overflow: hidden;
}

.header__item:hover {
  background: #111827;
  border-radius: 6px;
  transition: 0.3s;
}

.header__item--active {
  padding: 12px;
  display: flex;
  color: #FFFFFF;
  align-items: center;
  justify-content: center;
  overflow: hidden;
}

.header__user {
  display: flex;
  flex-direction: row;
  align-items: center;
  height: 80px;
  gap: 16px;
}

.header__username {
  font-weight: 400;
  font-size: 15px;
  color: #F5F5F5;
}
@media (max-width: 1259px) {
  .header__username {
    display: none;
  }
}

.header__userpic {
  width: 32px;
  height: 32px;
  background: #FFFFFF;
  border-radius: 16px;
}

.section {
  display: grid;
  grid-template-columns: repeat(3, minmax(0, 1fr));
  grid-column-gap: 21px;
  height: auto;
}
@media (max-width: 767px) {
  .section {
    grid-template-columns: repeat(1, minmax(0, 1fr));
    grid-row-gap: 10px;
    grid-column-gap: 0px;
  }
}

.section__left {
  grid-column: 1/2;
  background: #FCFFE7;
  border: 1px solid #000000;
  padding: 30px;
}
@media (max-width: 1259px) {
  .section__left {
    padding: 28px;
  }
}
@media (max-width: 1023px) {
  .section__left {
    padding: 24px;
  }
}
@media (max-width: 767px) {
  .section__left {
    grid-column: none;
    padding: 20px;
  }
}
@media (max-width: 575px) {
  .section__left {
    padding: 15px;
  }
}

.section__search {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  margin-bottom: 30px;
}
@media (max-width: 1259px) {
  .section__search {
    flex-direction: column;
  }
}
@media (max-width: 767px) {
  .section__search {
    flex-direction: row;
  }
}
@media (max-width: 575px) {
  .section__search {
    flex-direction: column;
  }
}

.section__list {
  list-style: inside;
  list-style-type: disc;
  font-weight: 400;
  font-size: 16px;
}
@media (max-width: 1023px) {
  .section__list {
    font-size: 14px;
  }
}

.section__title {
  font-weight: 700;
  font-size: 20px;
  margin-bottom: 16px;
}
@media (max-width: 767px) {
  .section__title {
    font-size: 18px;
    margin-bottom: 13px;
  }
}
@media (max-width: 575px) {
  .section__title {
    font-size: 16px;
  }
}

.section__right {
  grid-column: 2/4;
  border: 1px solid #000000;
  background: #FFFFFF;
  padding: 30px 32px;
}
@media (max-width: 1259px) {
  .section__right {
    padding: 28px;
  }
}
@media (max-width: 1023px) {
  .section__right {
    padding: 24px;
  }
}
@media (max-width: 767px) {
  .section__right {
    grid-column: none;
    padding: 20px;
  }
}
@media (max-width: 575px) {
  .section__right {
    padding: 15px;
  }
}

.section__decription {
  padding-bottom: 20px;
}

.section__subtitle {
  font-weight: 400;
  font-size: 24px;
  padding-bottom: 15px;
}
@media (max-width: 1023px) {
  .section__subtitle {
    font-size: 20px;
  }
}
@media (max-width: 767px) {
  .section__subtitle {
    font-size: 18px;
    padding-bottom: 13px;
  }
}
@media (max-width: 575px) {
  .section__subtitle {
    font-size: 16px;
  }
}

.section__text {
  font-weight: 400;
  font-size: 20px;
}
@media (max-width: 1023px) {
  .section__text {
    font-size: 14px;
  }
}

#section__button {
  width: 88px;
  height: 34px;
  border: 0;
  background-color: rgb(204, 204, 204);
}
@media (max-width: 575px) {
  #section__button {
    margin-top: 10px;
  }
}

#section__text {
  width: 238px;
  height: 34px;
}
@media (max-width: 1259px) {
  #section__text {
    width: 200px;
  }
}
@media (max-width: 1023px) {
  #section__text {
    width: 180px;
  }
}
@media (max-width: 767px) {
  #section__text {
    width: 200px;
  }
}
@media (max-width: 575px) {
  #section__text {
    width: 300px;
  }
}

.footer {
  height: 108px;
  background-color: #6A6A6A;
}

.footer__text {
  font-weight: 400;
  font-size: 11px;
  color: #ffffff;
  vertical-align: middle;
  height: 108px;
  display: flex;
  align-items: center;
  justify-content: flex-end;
}

.card {
  display: grid;
  padding-top: 48px;
  grid-template-columns: repeat(3, minmax(0, 1fr));
  grid-column-gap: 21px;
  grid-row-gap: 21px;
  height: auto;
}
@media (max-width: 1023px) {
  .card {
    grid-template-columns: repeat(2, minmax(0, 1fr));
    grid-row-gap: 10px;
  }
}
@media (max-width: 575px) {
  .card {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
}

.card__body {
  border: 1px solid #000000;
  border-radius: 8px;
}

.card__image {
  -o-object-fit: cover;
  object-fit: cover;
  height: 192px;
  width: 100%;
  border-top-left-radius: 6px;
  border-top-right-radius: 6px;
}

.card__content {
  display: flex;
  flex-grow: 1;
  flex-direction: column;
  padding: 24px;
  min-height: 300px;
}
@media (max-width: 1259px) {
  .card__content {
    min-height: 400px;
  }
}
@media (max-width: 767px) {
  .card__content {
    padding: 16px;
    min-height: 250px;
  }
}
@media (max-width: 575px) {
  .card__content {
    padding: 14px;
  }
}

.card__title {
  font-weight: 500;
  font-size: 20px;
  color: #111827;
  margin-bottom: 12px;
}
@media (max-width: 1023px) {
  .card__title {
    font-size: 18px;
  }
}
@media (max-width: 575px) {
  .card__title {
    font-size: 16px;
  }
}

.card__text {
  font-weight: 400;
  font-size: 16px;
  color: #6B7280;
}
@media (max-width: 575px) {
  .card__text {
    font-size: 14px;
  }
}

.card__description {
  flex-grow: 1;
}

.card__date {
  font-weight: 400;
  font-size: 14px;
  color: #6B7280;
}
@media (max-width: 767px) {
  .card__date {
    font-size: 12px;
  }
}

.card-add {
  display: flex;
  flex-direction: column;
  margin-top: 50px;
  align-items: center;
}

.card-add__wrapper {
  max-width: 300px;
  width: 100%;
}

.card-add__button--add {
  width: 100%;
  height: 44px;
  background: #FCFFE7;
  border: 1px solid #000000;
  font-weight: 500;
  font-size: 16px;
  border-radius: 3px;
}

.card-add__button--cancel {
  width: 300px;
  height: 44px;
  margin: 10px;
  background: #ffffff;
  border: 1px solid #000000;
  font-weight: 500;
  font-size: 16px;
  border-radius: 3px;
}

.card-add__button--create {
  width: 300px;
  height: 44px;
  margin: 10px;
  background: #FCFFE7;
  border: 1px solid #000000;
  font-weight: 500;
  font-size: 16px;
  border-radius: 3px;
}

.card__list {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

.card__content-list {
  min-height: 0px;
}

.card__body-list {
  display: flex;
  flex-direction: row;
}
@media (max-width: 767px) {
  .card__body-list {
    display: block;
  }
}

.card-add__form {
  display: none;
  justify-content: center;
  flex-direction: column;
  width: 100%;
  max-width: 850px;
  font-weight: 400;
  font-size: 18px;
}

.card-add__form-wrapper {
  display: flex;
  flex-direction: column;
}

.card-add__button-wrapper {
  margin-top: 30px;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  width: 100%;
}
@media (max-width: 767px) {
  .card-add__button-wrapper {
    flex-direction: column-reverse;
  }
}

.card-label__name {
  margin-top: 30px;
  height: 44px;
  border-radius: 3px;
}

.card-label__url {
  margin-top: 30px;
  height: 44px;
  border-radius: 3px;
}

.card-label__description {
  margin-top: 30px;
  border-radius: 3px;
}

.faq__title {
  text-align: center;
  padding-bottom: 25px;
  padding-top: 70px;
  font-size: 32px;
  font-weight: bold;
}

.faq__question {
  font-size: 20px;
  font-weight: 500;
  background-color: #D9D9D9;
  outline: none;
  margin: auto;
  padding: 19px 19px 19px 19px;
  margin-bottom: 30px;
  border-radius: 140px;
  cursor: pointer;
}
@media (max-width: 1023px) {
  .faq__question {
    font-size: 18px;
  }
}
@media (max-width: 767px) {
  .faq__question {
    font-size: 16px;
  }
}

.faq__answer {
  font-size: 16px;
  padding: 0px 18px;
  display: none;
  overflow: hidden;
  padding-bottom: 30px;
}
@media (max-width: 1023px) {
  .faq__answer {
    font-size: 14px;
  }
}
@media (max-width: 575px) {
  .faq__answer {
    font-size: 12px;
  }
}

.faq__question:hover {
  background: rgba(0, 0, 0, 0.3);
  border-radius: 5px;
  transition: all 0.3s ease;
}

.special__title {
  text-align: center;
  font-weight: 700;
  font-size: 32px;
  letter-spacing: -0.025em;
  padding-top: 100px;
  padding-bottom: 20px;
}
@media (max-width: 1023px) {
  .special__title {
    font-size: 30px;
    padding-top: 60px;
    padding-bottom: 14px;
  }
}
@media (max-width: 767px) {
  .special__title {
    font-size: 26px;
    padding-top: 50px;
    padding-bottom: 12px;
  }
}
@media (max-width: 575px) {
  .special__title {
    font-size: 20px;
    padding-top: 40px;
    padding-bottom: 10px;
  }
}

.special__subtitle {
  font-weight: 400;
  font-size: 20px;
  text-align: center;
  color: #6B7280;
  padding-top: 20px;
  padding-bottom: 48px;
}
@media (max-width: 1023px) {
  .special__subtitle {
    padding-bottom: 35px;
  }
}
@media (max-width: 767px) {
  .special__subtitle {
    font-size: 18px;
    padding-bottom: 25px;
  }
}
@media (max-width: 575px) {
  .special__subtitle {
    font-size: 16px;
    padding-bottom: 20px;
  }
}

.special__icons {
  display: flex;
  width: 100%;
  gap: 15px;
  justify-content: center;
  margin-bottom: 10px;
  font-size: 30px;
}
@media (max-width: 767px) {
  .special__icons {
    display: none;
  }
}

.special__icon-button {
  width: 30px;
  height: 30px;
  border: none;
}

.special__icon-button--active {
  color: red;
}

.page {
  margin-bottom: 100px;
}
@media (max-width: 1259px) {
  .page {
    margin-bottom: 80px;
  }
}
@media (max-width: 1023px) {
  .page {
    margin-bottom: 70px;
  }
}
@media (max-width: 767px) {
  .page {
    margin-top: 80px;
    margin-bottom: 50px;
  }
}
@media (max-width: 575px) {
  .page {
    margin-bottom: 50px;
  }
}

.page__title {
  text-align: center;
  padding: 65px;
  font-weight: 500;
  font-size: 40px;
  line-height: 47px;
}
@media (max-width: 575px) {
  .page__title {
    font-size: 30px;
    padding: 35px;
  }
}

.page__subtitle {
  font-weight: 700;
  font-size: 32px;
  line-height: 38px;
  margin-bottom: 50px;
}
@media (max-width: 1023px) {
  .page__subtitle {
    font-size: 30px;
    margin-bottom: 35px;
  }
}
@media (max-width: 767px) {
  .page__subtitle {
    font-size: 24px;
    margin-bottom: 25px;
  }
}
@media (max-width: 575px) {
  .page__subtitle {
    font-size: 20px;
    margin-bottom: 20px;
  }
}

.menu {
  display: flex;
  flex-direction: row;
  list-style-type: none;
  margin: 0;
  padding: 0;
}

.menu > li {
  overflow: hidden;
}

.menu-button-container {
  display: none;
  height: 100%;
  width: 30px;
  cursor: pointer;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

#menu-toggle {
  display: none;
}

.menu-button,
.menu-button::before,
.menu-button::after {
  display: block;
  background-color: #fff;
  position: absolute;
  height: 4px;
  width: 30px;
  transition: -webkit-transform 400ms cubic-bezier(0.23, 1, 0.32, 1);
  transition: transform 400ms cubic-bezier(0.23, 1, 0.32, 1);
  transition: transform 400ms cubic-bezier(0.23, 1, 0.32, 1), -webkit-transform 400ms cubic-bezier(0.23, 1, 0.32, 1);
  border-radius: 2px;
}

.menu-button::before {
  content: "";
  margin-top: -8px;
}

.menu-button::after {
  content: "";
  margin-top: 8px;
}

#menu-toggle:checked + .menu-button-container .menu-button::before {
  margin-top: 0px;
  -webkit-transform: rotate(405deg);
  transform: rotate(405deg);
}

#menu-toggle:checked + .menu-button-container .menu-button {
  background: rgba(255, 255, 255, 0);
}

#menu-toggle:checked + .menu-button-container .menu-button::after {
  margin-top: 0px;
  -webkit-transform: rotate(-405deg);
  transform: rotate(-405deg);
}

@media (max-width: 767px) {
  .page__header {
    position: fixed;
    top: 0;
    z-index: 100;
    width: 100%;
  }
  .menu-button-container {
    display: flex;
  }
  .menu {
    position: absolute;
    top: 0;
    margin-top: 80px;
    left: 0;
    flex-direction: column;
    width: 100%;
    justify-content: center;
    align-items: center;
  }
  #menu-toggle ~ .menu li {
    height: 0;
    margin: 0;
    padding: 0;
    border: 0;
    transition: height 400ms cubic-bezier(0.23, 1, 0.32, 1);
  }
  #menu-toggle:checked ~ .menu li {
    border: 1px solid #333;
    height: 2.5em;
    padding: 0.5em;
    transition: height 400ms cubic-bezier(0.23, 1, 0.32, 1);
  }
  .menu > li {
    display: flex;
    justify-content: center;
    margin: 0;
    padding: 0.5em 0;
    width: 100%;
    background-color: #222;
  }
  .menu > li:not(:last-child) {
    border-bottom: 1px solid #444;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
